#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
DEBUG STD 2 PAP RANGE vs FABRICATION CONFLICT
=============================================

Debug case c·ª• th·ªÉ: size 65, item 65-5295, RG BE
K·∫øt qu·∫£ mong mu·ªën: STD 2 PAP RANGE (∆∞u ti√™n cao)
K·∫øt qu·∫£ hi·ªán t·∫°i: Fabrication (c√≥ th·ªÉ b·ªã conflict)
"""

import pandas as pd
import sys
import os

# Import validator
sys.path.append('.')
from excel_validator_final import ExcelValidator

def debug_std2_pap_case():
    """
    Debug case c·ª• th·ªÉ t·ª´ d√≤ng 21 Excel
    """
    print("üêõ DEBUG: STD 2 PAP RANGE vs FABRICATION CONFLICT")
    print("=" * 60)
    
    # T·∫°o validator
    validator = ExcelValidator()
    
    # Case t·ª´ d√≤ng 21 Excel
    test_case = {
        "name": "D√íNG 21 EXCEL: STD 2 PAP RANGE Case",
        "data": {
            "item_description": "65-5295",  # Ch·ª©a 5295
            "size": "65",                   # Size 65  
            "fab_pipe": "STD 2 PAP RANGE", # FAB Pipe hi·ªán t·∫°i
            "end_1": "RG",                  # End-1 = RG
            "end_2": "BE"                   # End-2 = BE
        },
        "expected": "PASS"  # Ph·∫£i PASS v√¨ ƒë√∫ng STD 2 PAP RANGE
    }
    
    print(f"üîç Test Case: {test_case['name']}")
    print(f"üìä Data: {test_case['data']}")
    print()
    
    # T·∫°o mock row
    row = pd.Series(test_case['data'])
    
    # Ch·∫°y validation
    print("üöÄ Ch·∫°y validation...")
    result = validator._check_pipe_schedule_mapping(
        row, 
        'item_description',
        'size', 
        'fab_pipe',
        'end_1',
        'end_2'
    )
    
    print(f"üìù K·∫øt qu·∫£: {result}")
    print()
    
    # Ph√¢n t√≠ch k·∫øt qu·∫£
    is_pass = result == "PASS"
    expected_pass = test_case['expected'] == "PASS"
    
    if is_pass == expected_pass:
        print("‚úÖ CORRECT: K·∫øt qu·∫£ ƒë√∫ng theo mong mu·ªën")
    else:
        print("‚ùå INCORRECT: C√≥ conflict logic!")
        print(f"   Expected: {test_case['expected']}")
        print(f"   Actual: {'PASS' if is_pass else 'FAIL'}")
        print(f"   Chi ti·∫øt l·ªói: {result}")
    
    print()
    print("üîç PH√ÇN T√çCH LOGIC:")
    print("=" * 30)
    print("‚úÖ ∆ØU TI√äN CAO: STD 2 PAP RANGE (size 65, 5295, RG BE)")
    print("‚ùå ∆ØU TI√äN TH·∫§P: Fabrication (65, RG BE - nh∆∞ng kh√¥ng ph·∫£i PAP)")
    print()
    print("üëâ CASE N√ÄY PH·∫¢I: STD 2 PAP RANGE v√¨ c√≥ 5295 trong item description!")

if __name__ == "__main__":
    debug_std2_pap_case()
